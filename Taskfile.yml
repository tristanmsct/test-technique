version: '3'

tasks:
  init:
    desc: Initialise wine api project
    cmds:
      - docker compose -f compose.yaml -f infra/compose.prd.yaml build
      - docker compose up -d postgresql pgadmin mlflow
      - docker compose -f compose.yaml -f infra/compose.prd.yaml run --rm wine_ds python -m wine_ds.fill_db
      - docker compose -f compose.yaml -f infra/compose.prd.yaml run --rm wine_ds python -m wine_ds.train_model
      - docker compose -f compose.yaml -f infra/compose.prd.yaml up -d wine_api

  start:
    desc: Start essential services
    cmds:
      - docker compose -f compose.yaml -f infra/compose.{{.ENV}}.yaml up -d postgresql pgadmin mlflow wine_api
    vars:
      ENV: '{{.ENV| default "prd"}}'

  build:
    desc: (Re)-build all images
    cmds:
      - docker compose -f compose.yaml -f infra/compose.{{.ENV}}.yaml build --no-cache
    vars:
      ENV: '{{.ENV| default "prd"}}'

  ml:build:
    desc: Build machine learning image
    cmds:
      - docker compose -f compose.yaml -f infra/compose.{{.ENV}}.yaml build --no-cache wine_ds
    vars:
      ENV: '{{.ENV| default "prd"}}'

  ml:start:
    desc: Start a machine learning container for testing purposes
    cmds:
      - docker compose -f compose.yaml -f infra/compose.{{.ENV}}.yaml up -d wine_ds
    vars:
      ENV: '{{.ENV| default "prd"}}'

  ml:train:
    desc: Train a new model
    cmds:
      - docker compose -f compose.yaml -f infra/compose.{{.ENV}}.yaml run --rm wine_ds python -m wine_ds.train_model
    vars:
      ENV: '{{.ENV| default "prd"}}'

  ml:test:
    desc: Test the API on a given wine
    cmds:
      - docker compose -f compose.yaml -f infra/compose.{{.ENV}}.yaml run --rm wine_ds python -m wine_ds.test_api {{.NUM_WINE}}
    vars:
      ENV: '{{.ENV| default "prd"}}'
      NUM_WINE: '{{.NUM_WINE| default 10}}'
